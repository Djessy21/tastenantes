/**
 * Script pour supprimer tous les restaurants de la base de donn√©es
 *
 * Utilisation:
 * npm run clear-restaurants
 *
 * Ce script supprime tous les restaurants et leurs plats associ√©s de la base de donn√©es.
 * Utile pour nettoyer la base de donn√©es avant de la remplir avec de nouvelles donn√©es.
 */

import { PrismaClient } from "@prisma/client";
import { getEnvironment } from "../app/lib/env";

// Initialiser le client Prisma
const prisma = new PrismaClient();

async function clearRestaurants() {
  // V√©rifier l'environnement pour √©viter de supprimer accidentellement les donn√©es de production
  const env = getEnvironment();

  if (env === "production") {
    console.error(
      "‚õî ATTENTION: Ce script ne peut pas √™tre ex√©cut√© en environnement de production."
    );
    console.error(
      "Utilisez l'option --force si vous √™tes absolument s√ªr de vouloir supprimer toutes les donn√©es de production."
    );

    // V√©rifier si l'option --force est pr√©sente
    if (!process.argv.includes("--force")) {
      console.error("Op√©ration annul√©e.");
      process.exit(1);
    }

    console.warn(
      "‚ö†Ô∏è Option --force d√©tect√©e. Suppression des donn√©es de production..."
    );
  }

  try {
    console.log("üóëÔ∏è Suppression de tous les restaurants et plats associ√©s...");

    // Supprimer tous les restaurants (cela supprimera √©galement les plats associ√©s gr√¢ce aux relations)
    const deletedCount = await prisma.restaurant.deleteMany({});

    console.log(
      `‚úÖ ${deletedCount.count} restaurants ont √©t√© supprim√©s avec succ√®s.`
    );
    console.log("Tous les plats associ√©s ont √©galement √©t√© supprim√©s.");

    return deletedCount.count;
  } catch (error) {
    console.error("‚ùå Erreur lors de la suppression des restaurants:", error);
    throw error;
  } finally {
    // Fermer la connexion Prisma
    await prisma.$disconnect();
  }
}

// Ex√©cuter la fonction si le script est appel√© directement
if (require.main === module) {
  clearRestaurants()
    .then((count) => {
      console.log(`üìä Op√©ration termin√©e. ${count} restaurants supprim√©s.`);
      process.exit(0);
    })
    .catch((error) => {
      console.error("‚ùå Erreur:", error);
      process.exit(1);
    });
}

// Exporter la fonction pour pouvoir l'utiliser dans d'autres scripts
export default clearRestaurants;
